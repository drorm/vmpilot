name: Testing

on:
  push:
    branches:
      - dev
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    branches:
      - dev
    paths-ignore:
      - 'docs/**'
      - '**.md'
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev]"
        # Ensure all dependencies are installed
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Run linting checks
      run: |
        bash sh/lint.sh
    
    - name: Validate dependencies
      run: |
        bash sh/freeze_deps.sh
    
    - name: Create required directories for tests
      run: |
        mkdir -p ~/.anthropic
        mkdir -p ~/.openai

    - name: Run tests
      run: |
        python -m pytest tests/unit -v
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          pytest-report.xml
          coverage-report.xml
        retention-days: 5

  static-analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev]"
        python -m pip install ruff
    
    - name: Generate dependency graph
      run: |
        python -m pip install pipdeptree
        python -m pipdeptree > dependencies.txt
        python -m pipdeptree --graph-output png -o dependency-graph.png || echo "Failed to generate graph, but continuing..."

    - name: Upload dependency graph
      uses: actions/upload-artifact@v4
      with:
        name: dependency-graph
        path: dependency-graph.png
        retention-days: 5

  notification:
    runs-on: ubuntu-latest
    needs: [test, static-analysis]
    if: always()
    steps:
    - name: Send email notification
      uses: dawidd6/action-send-mail@v3
      if: failure()
      with:
        server_address: ${{ secrets.MAIL_SERVER }}
        server_port: ${{ secrets.MAIL_PORT }}
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: GitHub Actions Test Results - ${{ github.repository }}
        body: |
          Testing workflow for ${{ github.repository }} has failed!
          
          Workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          Commit: ${{ github.sha }}
          Branch: ${{ github.ref }}
          
          Please check the workflow run for more details.
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: GitHub Actions
